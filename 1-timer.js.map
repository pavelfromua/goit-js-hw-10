{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startButton = document.querySelector('[data-start]');\nconst dataDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinutes = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]');\nconst dateTimePicker = document.querySelector('#datetime-picker');\nlet userSelectedDate = null;\n\nconst displayErrorMessage = () => {\n  iziToast.error({\n    message: 'Please choose a date in the future',\n    timeout: 1000,\n    progressBar: false,\n  });\n};\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0].getTime() < Date.now()) {\n      displayErrorMessage();\n      startButton.disabled = true;\n      return;\n    }\n\n    userSelectedDate = selectedDates[0];\n    startButton.disabled = false;\n  },\n};\n\nflatpickr(dateTimePicker, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\n\nconst getFormatted = (value) => {\n  return String(value).padStart(2, '0');\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  startButton.disabled = true;\n});\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  dateTimePicker.disabled = true;\n\n  const intervalId = setInterval(() => {\n    const { days, hours, minutes, seconds } = convertMs(userSelectedDate - Date.now());\n\n    dataDays.textContent = getFormatted(days);\n    dataHours.textContent = getFormatted(hours);\n    dataMinutes.textContent = getFormatted(minutes);\n    dataSeconds.textContent = getFormatted(seconds);\n\n    if ((days + hours + minutes + seconds) <= 0) {\n      dateTimePicker.disabled = false;\n      clearInterval(intervalId);\n    }\n\n  }, 1000);\n});"],"names":["startButton","dataDays","dataHours","dataMinutes","dataSeconds","dateTimePicker","userSelectedDate","displayErrorMessage","iziToast","options","selectedDates","flatpickr","convertMs","ms","days","hours","minutes","seconds","getFormatted","value","intervalId"],"mappings":"+IAKA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAiB,SAAS,cAAc,kBAAkB,EAChE,IAAIC,EAAmB,KAEvB,MAAMC,EAAsB,IAAM,CAChCC,EAAS,MAAM,CACb,QAAS,qCACT,QAAS,IACT,YAAa,EACjB,CAAG,CACH,EAEMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,CAAC,EAAE,QAAO,EAAK,KAAK,MAAO,CAC3CH,IACAP,EAAY,SAAW,GACvB,MACD,CAEDM,EAAmBI,EAAc,CAAC,EAClCV,EAAY,SAAW,EACxB,CACH,EAEAW,EAAUN,EAAgBI,CAAO,EAEjC,SAASG,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAgBC,GACb,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAGtC,SAAS,iBAAiB,mBAAoB,IAAM,CAClDnB,EAAY,SAAW,EACzB,CAAC,EAEDA,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBK,EAAe,SAAW,GAE1B,MAAMe,EAAa,YAAY,IAAM,CACnC,KAAM,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKL,EAAUN,EAAmB,KAAK,IAAG,CAAE,EAEjFL,EAAS,YAAciB,EAAaJ,CAAI,EACxCZ,EAAU,YAAcgB,EAAaH,CAAK,EAC1CZ,EAAY,YAAce,EAAaF,CAAO,EAC9CZ,EAAY,YAAcc,EAAaD,CAAO,EAEzCH,EAAOC,EAAQC,EAAUC,GAAY,IACxCZ,EAAe,SAAW,GAC1B,cAAce,CAAU,EAG3B,EAAE,GAAI,CACT,CAAC"}